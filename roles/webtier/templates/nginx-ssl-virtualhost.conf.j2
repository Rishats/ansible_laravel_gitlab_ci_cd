server {
    listen       443 http2 ssl;

    server_name  {{ item.value.servernames | join(" ") }} {{ ansible_default_ipv4["address"] }} localhost;

    root   /var/www/{{ item.value.servernames[0] }}/public;
    index index.php;

    access_log  /var/log/nginx/{{ item.value.servernames[0] }}-access.log;
    error_log  /var/log/nginx/{{ item.value.servernames[0] }}-error.log error;

    ssl_certificate /etc/letsencrypt/live/{{ item.value.servernames[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.value.servernames[0] }}/privkey.pem;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    location / {
        try_files $uri $uri/ /index.php?$args;
        autoindex on;
    }

    location ~ /.well-known {
        allow all;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 1200;
        include fastcgi_params;
    }
}
server 
{
    if ($host = {{ item.value.servernames[0] }}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name {{ item.value.servernames[0] }} www.{{ item.value.servernames[0] }};
    listen 80;
    return 404; # managed by Certbot
}